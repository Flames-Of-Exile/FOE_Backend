# pull official base image
FROM python:3.8-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# install operating dependencies
RUN apt-get -y update \
    && apt-get -y install \
    gcc \
    libpq-dev 

# install python packages
RUN pip install --upgrade pip \
    && pip install --upgrade wheel
COPY ./requirements.txt /usr/src/app/requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

# pull official base image
FROM python:3.9.1-slim-buster

# create the app user
RUN useradd -ms /bin/bash app

# set work directory
WORKDIR /usr/src/app

# install dependencies
RUN apt-get -y update && apt-get -y install gcc libpq-dev netcat
COPY --from=builder /usr/src/app/wheels /wheels
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

#copy entrypoint.prod.sh
COPY ./entrypoint.prod.sh /usr/src/app/entrypoint.prod.sh

#setting file permissions
RUN chmod 700 /usr/src/app/entrypoint.prod.sh
RUN chmod +x /usr/src/app/entrypoint.prod.sh

# copy project
COPY . /usr/src/app/

# chown all the files to the app user
RUN chown -R app:app /usr/src/app/

# change to the app user
USER app

# run entrypoint.sh
ENTRYPOINT ["sh", "/usr/src/app/entrypoint.prod.sh"]
